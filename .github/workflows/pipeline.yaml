# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-net
# yaml-language-server: $schema=https://json.schemastore.org/github-workflow.json

# Pipeline
name: Pipeline

# On
# Events triggers - https://docs.github.com/en/actions/using-workflows/events-that-trigger-workflows
on:
  # Push
  push: # https://docs.github.com/en/actions/using-workflows/events-that-trigger-workflows#push
    branches: [ main, develop, feature** ] # Run the workflow when pushing to the main, develop and any feature branches
    # paths: # Run the workflow when pushing changes under the src, test directory
    #   - src/**
    #   - test/**

  delete: # https://docs.github.com/en/actions/using-workflows/events-that-trigger-workflows#delete
    branches: [ feature** ] # Runs the workflow when someone deletes a Git reference (Git branch or tag) in the workflow's repository from any feature branches.

# Env
env:
  SAM_TEMPLATE: template.yaml

  # Testing (dev)
  TESTING_STACK_NAME: sam-app-dev
  TESTING_PIPELINE_EXECUTION_ROLE: arn:aws:iam::533267171025:role/aws-sam-cli-managed-dev-pipel-PipelineExecutionRole-QFRlae8iTmf8
  TESTING_CLOUDFORMATION_EXECUTION_ROLE: arn:aws:iam::533267171025:role/aws-sam-cli-managed-dev-p-CloudFormationExecutionRo-cxxL7buV7pEQ
  TESTING_ARTIFACTS_BUCKET: aws-sam-cli-managed-dev-pipeline-r-artifactsbucket-9icwrolvc7vt
  # If there are functions with "Image" PackageType in your template, uncomment the line below and add "--image-repository ${TESTING_IMAGE_REPOSITORY}" to testing "sam package" and "sam deploy" commands.
  # TESTING_IMAGE_REPOSITORY = '0123456789.dkr.ecr.region.amazonaws.com/repository-name'
  TESTING_REGION: us-east-1

  # Prod (prod)
  PROD_STACK_NAME: sam-app-prod
  PROD_PIPELINE_EXECUTION_ROLE: arn:aws:iam::533267171025:role/aws-sam-cli-managed-prod-pipe-PipelineExecutionRole-Uq1Vs2LMRVt1
  PROD_CLOUDFORMATION_EXECUTION_ROLE: arn:aws:iam::533267171025:role/aws-sam-cli-managed-prod--CloudFormationExecutionRo-yjqXvV46xcFZ
  PROD_ARTIFACTS_BUCKET: aws-sam-cli-managed-prod-pipeline--artifactsbucket-fqhkbsd0mb3a
  # If there are functions with "Image" PackageType in your template, uncomment the line below and add "--image-repository ${PROD_IMAGE_REPOSITORY}" to prod "sam package" and "sam deploy" commands.
  # PROD_IMAGE_REPOSITORY = '0123456789.dkr.ecr.region.amazonaws.com/repository-name'
  PROD_REGION: us-east-1
  BRANCH_NAME: ${{ github.ref }}} # The fully-formed ref of the branch or tag that triggered the workflow run. - https://docs.github.com/en/actions/learn-github-actions/contexts#github-context
  TAG_NAME: ${{ github.event.ref }}} # The full git ref that was pushed. Example: refs/heads/main # - https://docs.github.com/en/rest/using-the-rest-api/github-event-types?apiVersion=2022-11-28#event-payload-object-for-pushevent

  # Conditions
  IsPush: ${{ github.event_name }} == 'push' # The name of the event that triggered the workflow run. - https://docs.github.com/en/actions/learn-github-actions/contexts#github-context
  IsDelete: ${{ github.event_name }} == 'delete'
  IsFeatureBranch: ${{ startsWith(github.event.ref, 'feature') }}
  IsMainBranch: ${{ github.ref }} == 'refs/heads/main'

# Permissions
permissions:
  id-token: write
  contents: read

# Jobs
jobs:
  # Test
  test:
    name: Test
    timeout-minutes: 15
    runs-on: ubuntu-latest
    if: github.event_name == 'push'
    steps:
      # Checkout
      - name: Checkout
        uses: actions/checkout@v4 # https://github.com/actions/checkout

      # Tests
      - name: Tests
        run: |
          # trigger the tests here

  # Delete Feature
  delete-feature:
    name: Delete Feature
    timeout-minutes: 15
    runs-on: ubuntu-latest
    if: startsWith(github.event.ref, 'feature') && github.event_name == 'delete'
    steps:
      # Checkout
      - name: Checkout
        uses: actions/checkout@v4 # https://github.com/actions/checkout

      # Setup SAM
      - name: Setup SAM
        uses: aws-actions/setup-sam@v2 # https://github.com/aws-actions/setup-sam
        with:
          use-installer: true

      # Assume the testing pipeline user role
      - name: Assume the testing pipeline user role
        uses: aws-actions/configure-aws-credentials@v4 # https://github.com/aws-actions/configure-aws-credentials
        with:
          aws-region: ${{ env.TESTING_REGION }}
          role-to-assume: ${{ env.TESTING_PIPELINE_EXECUTION_ROLE }}
          role-session-name: testing-packaging
          role-duration-seconds: 3600
          role-skip-session-tagging: true

      # Delete feature branch stack
      - name: Delete feature branch stack
        env:
          FEATURE_BRANCH_NAME: ${{ env.TAG_NAME }}
        run: |
          sam delete \
            --stack-name $(echo ${FEATURE_BRANCH_NAME##*/} | tr -cd '[a-zA-Z0-9-]') \
            --region ${TESTING_REGION} \
            --no-prompts

  # Build and Deploy Feature
  build-and-deploy-feature:
    # This job is triggered only for feature branches (feature*), which will build the stack and deploy to a stack named with branch name.
    # https://github.com/actions/setup-python
    # https://github.com/aws-actions/configure-aws-credentials#notice-node12-deprecation-warning
    name: Build and Deploy Feature
    timeout-minutes: 15
    runs-on: ubuntu-latest
    needs: [test]
    if: startsWith(github.event.ref, 'feature')
    steps:
      # Checkout
      - name: Checkout
        uses: actions/checkout@v4 # https://github.com/actions/checkout

      # Setup SAM
      - name: Setup SAM
        uses: aws-actions/setup-sam@v2 # https://github.com/aws-actions/setup-sam
        with:
          use-installer: true

      # sam build
      - name: sam build
        run: sam build --template ${SAM_TEMPLATE} --use-container --mount-with WRITE

      # Assume the testing pipeline user role
      - name: Assume the testing pipeline user role
        uses: aws-actions/configure-aws-credentials@v4 # https://github.com/aws-actions/configure-aws-credentials
        with:
          aws-region: ${{ env.TESTING_REGION }}
          role-to-assume: ${{ env.TESTING_PIPELINE_EXECUTION_ROLE }}
          role-session-name: feature-deployment
          role-duration-seconds: 3600
          role-skip-session-tagging: true

      # Deploy to feature stack in the testing account
      - name: Deploy to feature stack in the testing account
        shell: bash
        run: |
          sam deploy --stack-name $(echo ${GITHUB_REF##*/} | tr -cd '[a-zA-Z0-9-]') \
            --capabilities CAPABILITY_IAM \
            --region ${TESTING_REGION} \
            --s3-bucket ${TESTING_ARTIFACTS_BUCKET} \
            --no-fail-on-empty-changeset \
            --role-arn ${TESTING_CLOUDFORMATION_EXECUTION_ROLE}

  # Build and Package
  build-and-package:
    name: Build and Package
    timeout-minutes: 15
    runs-on: ubuntu-latest
    needs: [test]
    if: github.ref == 'refs/heads/main'
    steps:
      # Checkout
      - name: Checkout
        uses: actions/checkout@v4 # https://github.com/actions/checkout

      # Setup SAM
      - name: Setup SAM
        uses: aws-actions/setup-sam@v2 # https://github.com/aws-actions/setup-sam
        with:
          use-installer: true

      # Build resources
      - name: Build resources
        run: sam build --template ${SAM_TEMPLATE} --use-container --mount-with WRITE

      # Assume the testing pipeline user role
      - name: Assume the testing pipeline user role
        uses: aws-actions/configure-aws-credentials@v4 # https://github.com/aws-actions/configure-aws-credentials
        with:
          aws-region: ${{ env.TESTING_REGION }}
          role-to-assume: ${{ env.TESTING_PIPELINE_EXECUTION_ROLE }}
          role-session-name: testing-packaging
          role-duration-seconds: 3600
          role-skip-session-tagging: true

      # Upload artifacts to testing artifact buckets
      - name: Upload artifacts to testing artifact buckets
        run: |
          sam package \
            --s3-bucket ${TESTING_ARTIFACTS_BUCKET} \
            --region ${TESTING_REGION} \
            --output-template-file packaged-testing.yaml

      # Upload artifacts to testing artifact buckets
      - name: Upload artifacts to testing artifact buckets
        uses: actions/upload-artifact@v4 # https://github.com/actions/upload-artifact
        with:
          name: packaged-testing.yaml
          path: packaged-testing.yaml

      # Assume the prod pipeline user role
      - name: Assume the prod pipeline user role
        uses: aws-actions/configure-aws-credentials@v4 # https://github.com/aws-actions/configure-aws-credentials
        with:
          aws-region: ${{ env.PROD_REGION }}
          role-to-assume: ${{ env.PROD_PIPELINE_EXECUTION_ROLE }}
          role-session-name: prod-packaging
          role-duration-seconds: 3600
          role-skip-session-tagging: true

      # Upload artifacts to production artifact buckets
      - name: Upload artifacts to production artifact buckets
        run: |
          sam package \
            --s3-bucket ${PROD_ARTIFACTS_BUCKET} \
            --region ${PROD_REGION} \
            --output-template-file packaged-prod.yaml

      # Upload artifacts
      - name: Upload artifacts
        uses: actions/upload-artifact@v4 # https://github.com/actions/upload-artifact
        with:
          name: packaged-prod.yaml
          path: packaged-prod.yaml

  # Deploy Testing (dev)
  deploy-testing:
    name: Deploy Testing (dev)
    timeout-minutes: 15
    runs-on: ubuntu-latest
    needs: [build-and-package]
    if: github.ref == 'refs/heads/main'
    steps:
      # Checkout
      - name: Checkout
        uses: actions/checkout@v4 # https://github.com/actions/checkout

      # Setup SAM
      - name: Setup SAM
        uses: aws-actions/setup-sam@v2 # https://github.com/aws-actions/setup-sam
        with:
          use-installer: true

      # Download artifact
      - name: Download artifact
        uses: actions/download-artifact@v4 # https://github.com/actions/download-artifact
        with:
          name: packaged-testing.yaml

      # Assume the testing pipeline user role
      - name: Assume the testing pipeline user role
        uses: aws-actions/configure-aws-credentials@v4 # https://github.com/aws-actions/configure-aws-credentials
        with:
          aws-region: ${{ env.TESTING_REGION }}
          role-to-assume: ${{ env.TESTING_PIPELINE_EXECUTION_ROLE }}
          role-session-name: testing-deployment
          role-duration-seconds: 3600
          role-skip-session-tagging: true

      # Deploy to testing account
      - name: Deploy to testing account
        run: |
          sam deploy --stack-name ${TESTING_STACK_NAME} \
            --template packaged-testing.yaml \
            --capabilities CAPABILITY_IAM \
            --region ${TESTING_REGION} \
            --s3-bucket ${TESTING_ARTIFACTS_BUCKET} \
            --no-fail-on-empty-changeset \
            --role-arn ${TESTING_CLOUDFORMATION_EXECUTION_ROLE}

  # Integration Test
  integration-test:
    name: Integration Test
    timeout-minutes: 15
    runs-on: ubuntu-latest
    needs: [deploy-testing]
    if: github.ref == 'refs/heads/main'
    steps:
      # Checkout
      - name: Checkout
        uses: actions/checkout@v4 # https://github.com/actions/checkout

      # Integration tests
      - name: Integration tests
        run: |
          # trigger the integration tests here

  # Deploy Prod (prod)
  deploy-prod:
    name: Deploy Prod (prod)
    timeout-minutes: 15
    runs-on: ubuntu-latest
    needs: [integration-test]
    if: github.ref == 'refs/heads/main'
    # Configure GitHub Action Environment to have a manual approval step before deployment to production
    # https://docs.github.com/en/actions/reference/environments
    # environment: <configured-environment>
    steps:
      # Checkout
      - name: Checkout
        uses: actions/checkout@v4 # https://github.com/actions/checkout

      # Setup SAM
      - name: Setup SAM
        uses: aws-actions/setup-sam@v2 # https://github.com/aws-actions/setup-sam
        with:
          use-installer: true

      # Download artifact
      - name: Download artifact
        uses: actions/download-artifact@v4 # https://github.com/actions/download-artifact
        with:
          name: packaged-prod.yaml

      # Assume the prod pipeline user role
      - name: Assume the prod pipeline user role
        uses: aws-actions/configure-aws-credentials@v4 # https://github.com/aws-actions/configure-aws-credentials
        with:
          aws-region: ${{ env.PROD_REGION }}
          role-to-assume: ${{ env.PROD_PIPELINE_EXECUTION_ROLE }}
          role-session-name: prod-deployment
          role-duration-seconds: 3600
          role-skip-session-tagging: true

      # Deploy to production account
      - name: Deploy to production account
        run: |
          sam deploy --stack-name ${PROD_STACK_NAME} \
            --template packaged-prod.yaml \
            --capabilities CAPABILITY_IAM \
            --region ${PROD_REGION} \
            --s3-bucket ${PROD_ARTIFACTS_BUCKET} \
            --no-fail-on-empty-changeset \
            --role-arn ${PROD_CLOUDFORMATION_EXECUTION_ROLE}
